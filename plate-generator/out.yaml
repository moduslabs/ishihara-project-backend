Resources:
  bucketishihararafael1FC297F5:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: ishihara-rafael
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: CdkIshiharaStack/bucket-ishihara-rafael/Resource
  lambdagetplatesServiceRoleC689E491:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkIshiharaStack/lambda-get-plates/ServiceRole/Resource
  lambdagetplates2FE8F6B9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: c8bf5f2be9a008fb21673364c22b7f967802d1ae5c1710334c53d70ac2d85114.zip
      Role:
        Fn::GetAtt:
          - lambdagetplatesServiceRoleC689E491
          - Arn
      Handler: src/index.handler
      Runtime: nodejs14.x
    DependsOn:
      - lambdagetplatesServiceRoleC689E491
    Metadata:
      aws:cdk:path: CdkIshiharaStack/lambda-get-plates/Resource
      aws:asset:path: asset.c8bf5f2be9a008fb21673364c22b7f967802d1ae5c1710334c53d70ac2d85114
      aws:asset:is-bundled: false
      aws:asset:property: Code
  apigatewayishihararafael7540FA3D:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: api-gateway-ishihara-rafael
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Resource
  apigatewayishihararafaelCloudWatchRoleD9F35D32:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/CloudWatchRole/Resource
  apigatewayishihararafaelAccountB839D704:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - apigatewayishihararafaelCloudWatchRoleD9F35D32
          - Arn
    DependsOn:
      - apigatewayishihararafael7540FA3D
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Account
  apigatewayishihararafaelDeploymentC93CD87Aeb3d142b7eabb24c80139453c497dbdf:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: apigatewayishihararafael7540FA3D
      Description: Automatically created by the RestApi construct
    DependsOn:
      - apigatewayishihararafaelplatesGET9F2B3647
      - apigatewayishihararafaelplatesOPTIONS8AE0BCDB
      - apigatewayishihararafaelplates5F7BE378
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Deployment/Resource
  apigatewayishihararafaelDeploymentStagerafaelFB7A72A1:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: apigatewayishihararafael7540FA3D
      DeploymentId:
        Ref: apigatewayishihararafaelDeploymentC93CD87Aeb3d142b7eabb24c80139453c497dbdf
      StageName: rafael
    DependsOn:
      - apigatewayishihararafaelAccountB839D704
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/DeploymentStage.rafael/Resource
  apigatewayishihararafaelplates5F7BE378:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - apigatewayishihararafael7540FA3D
          - RootResourceId
      PathPart: plates
      RestApiId:
        Ref: apigatewayishihararafael7540FA3D
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Default/plates/Resource
  apigatewayishihararafaelplatesGETApiPermissionCdkIshiharaStackapigatewayishihararafael0FE3E288GETplatesB40EFD0F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdagetplates2FE8F6B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apigatewayishihararafael7540FA3D
            - /
            - Ref: apigatewayishihararafaelDeploymentStagerafaelFB7A72A1
            - /GET/plates
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Default/plates/GET/ApiPermission.CdkIshiharaStackapigatewayishihararafael0FE3E288.GET..plates
  apigatewayishihararafaelplatesGETApiPermissionTestCdkIshiharaStackapigatewayishihararafael0FE3E288GETplates52E33B22:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdagetplates2FE8F6B9
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: apigatewayishihararafael7540FA3D
            - /test-invoke-stage/GET/plates
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Default/plates/GET/ApiPermission.Test.CdkIshiharaStackapigatewayishihararafael0FE3E288.GET..plates
  apigatewayishihararafaelplatesGET9F2B3647:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: apigatewayishihararafaelplates5F7BE378
      RestApiId:
        Ref: apigatewayishihararafael7540FA3D
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - lambdagetplates2FE8F6B9
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Default/plates/GET/Resource
  apigatewayishihararafaelplatesOPTIONS8AE0BCDB:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: apigatewayishihararafaelplates5F7BE378
      RestApiId:
        Ref: apigatewayishihararafael7540FA3D
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkIshiharaStack/api-gateway-ishihara-rafael/Default/plates/OPTIONS/Resource
  lambdaplategeneratorrafaelServiceRoleD657902E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkIshiharaStack/lambda-plate-generator-rafael/ServiceRole/Resource
  lambdaplategeneratorrafael031B687F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 846bd03f2baa8b1f22499512eb20b157a49aa33629f29a9f8d72f1f3e9215ef0.zip
      Role:
        Fn::GetAtt:
          - lambdaplategeneratorrafaelServiceRoleD657902E
          - Arn
      Environment:
        Variables:
          BUCKET_S3: ishihara-rafael
          FONTCONFIG_PATH: /var/task/algorithm/fonts
          LD_PRELOAD: /var/task/algorithm/node_modules/canvas/build/Release/libz.so.1
          LD_LIBRARY_PATH: $LD_LIBRARY_PATH:/var/task/algorithm/lib
      Handler: index.handler
      Runtime: nodejs14.x
    DependsOn:
      - lambdaplategeneratorrafaelServiceRoleD657902E
    Metadata:
      aws:cdk:path: CdkIshiharaStack/lambda-plate-generator-rafael/Resource
      aws:asset:path: asset.846bd03f2baa8b1f22499512eb20b157a49aa33629f29a9f8d72f1f3e9215ef0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  cronplategeneratorrafael095A4FC3:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(* * * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - lambdaplategeneratorrafael031B687F
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: CdkIshiharaStack/cron-plate-generator-rafael/Resource
  cronplategeneratorrafaelAllowEventRuleCdkIshiharaStacklambdaplategeneratorrafaelECE68FC537DB3136:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - lambdaplategeneratorrafael031B687F
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - cronplategeneratorrafael095A4FC3
          - Arn
    Metadata:
      aws:cdk:path: CdkIshiharaStack/cron-plate-generator-rafael/AllowEventRuleCdkIshiharaStacklambdaplategeneratorrafaelECE68FC5
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WP0W7CMAxFv4X31IOC9l6Y9rRpqPsAFFKvC22TqnZAKMq/L0mrjT3dYye+vi6hXMN6JW9UqKYren0G/8lSdSK2Tp624PdOdcji8GUWmmUvCYPo5XBuJPhXZxRra9K3Rz7iNGiiWAWh5QC+tj2mh6RB0PYkiZAJqiRCjrqVjDd5B/+WrWskrkadR/6wUso6w+IFx97eBzQ530MVb2jznhniqHWTwhT6t1g8Z35H/rZNas0UBF6jEcXEbkkcNQSRgyZXbdrU/nA8Ov7nFflgTaM5n21sg3Chp+vmGTY7KFcX0rqYYnw9INSz/gAlPAC+iAEAAA==
    Metadata:
      aws:cdk:path: CdkIshiharaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  apigatewayishihararafaelEndpoint1BC4E14B:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: apigatewayishihararafael7540FA3D
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: apigatewayishihararafaelDeploymentStagerafaelFB7A72A1
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

